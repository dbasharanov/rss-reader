{"remainingRequest":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/babel-loader/lib/index.js!/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/eslint-loader/index.js??ref--13-0!/home/dbasharanov/Desktop/ElevateCompany/rss-reader/src/store.js","dependencies":[{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/src/store.js","mtime":1566415462799},{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport config from '@/config/db';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    feeds: []\n  },\n  mutations: {},\n  actions: {\n    getFeeds: function getFeeds(context) {\n      var authString = btoa(config.appKey + ':' + config.appSecret);\n      this.$http.defaults.headers.post['Authorization'] = 'Kinvey ' + authString;\n      return this.$http.get('https://baas.kinvey.com/appdata/' + config.appKey + '/feeds').then(function (response) {\n        // handle success\n        console.log(response);\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).finally(function () {// always executed\n      });\n    }\n  }\n});",{"version":3,"sources":["/home/dbasharanov/Desktop/ElevateCompany/rss-reader/src/store.js"],"names":["Vue","Vuex","config","use","Store","state","feeds","mutations","actions","getFeeds","context","authString","btoa","appKey","appSecret","$http","defaults","headers","post","get","then","response","console","log","catch","error","finally"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AACAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACG,KAAT,CAAe;AAE5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF,GAFqB;AAM5BC,EAAAA,SAAS,EAAE,EANiB;AAS5BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QADO,oBACEC,OADF,EACU;AACf,UAAMC,UAAU,GAAGC,IAAI,CAACV,MAAM,CAACW,MAAP,GAAgB,GAAhB,GAAsBX,MAAM,CAACY,SAA9B,CAAvB;AAEA,WAAKC,KAAL,CAAWC,QAAX,CAAoBC,OAApB,CAA4BC,IAA5B,CAAiC,eAAjC,IAAoD,YAAWP,UAA/D;AACA,aAAO,KAAKI,KAAL,CAAWI,GAAX,CAAgB,qCAAqCjB,MAAM,CAACW,MAA5C,GAAqD,QAArE,EACLO,IADK,CACA,UAAUC,QAAV,EAAoB;AACvB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,OAJI,EAKJG,KALI,CAKE,UAAUC,KAAV,EAAiB;AACtB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,OARI,EASJC,OATI,CASI,YAAY,CACnB;AACD,OAXI,CAAP;AAaD;AAlBM;AATmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\n\nimport config from '@/config/db'\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n\n  state: {\n    feeds: [],\n  },\n\n  mutations: {\n    \n  },\n  actions: {\n    getFeeds(context){\n      const authString = btoa(config.appKey + ':' + config.appSecret);\n      \n      this.$http.defaults.headers.post['Authorization'] = 'Kinvey '+ authString;\n      return this.$http.get( 'https://baas.kinvey.com/appdata/' + config.appKey + '/feeds')\n       .then(function (response) {\n          // handle success\n          console.log(response);\n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .finally(function () {\n          // always executed\n        });\n\n    }\n  }\n});"]}]}