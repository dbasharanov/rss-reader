{"remainingRequest":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/babel-loader/lib/index.js!/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/eslint-loader/index.js??ref--13-0!/home/dbasharanov/Desktop/ElevateCompany/rss-reader/src/store.js","dependencies":[{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/src/store.js","mtime":1566461063832},{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport config from '@/config/db';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    feeds: [],\n    count: 11\n  },\n  mutations: {\n    GET_ALL_FEEDS: function GET_ALL_FEEDS(state, payload) {\n      console.log(payload);\n      state.feeds = payload;\n    }\n  },\n  actions: {\n    getFeeds: function getFeeds(context) {\n      var authString = btoa(config.appKey + ':' + config.appSecret);\n      fetch('https://baas.kinvey.com/appdata/' + config.appKey + '/feeds', {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Kinvey ' + localStorage.getItem('authtoken'),\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        return context.commit('GET_ALL_FEEDS', data);\n      });\n    }\n  },\n  getters: {\n    doubleCounter: function doubleCounter(state) {\n      return state.count * 2;\n    },\n    getFeedsLenght: function getFeedsLenght(state) {\n      return feeds.lenght;\n    }\n  }\n});",{"version":3,"sources":["/home/dbasharanov/Desktop/ElevateCompany/rss-reader/src/store.js"],"names":["Vue","Vuex","axios","config","use","Store","state","feeds","count","mutations","GET_ALL_FEEDS","payload","console","log","actions","getFeeds","context","authString","btoa","appKey","appSecret","fetch","method","headers","localStorage","getItem","then","res","json","data","commit","getters","doubleCounter","getFeedsLenght","lenght"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACAH,GAAG,CAACI,GAAJ,CAAQH,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACI,KAAT,CAAe;AAE5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,KAAK,EAAE;AAFF,GAFqB;AAO5BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,aADS,yBACKJ,KADL,EACYK,OADZ,EACqB;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAL,MAAAA,KAAK,CAACC,KAAN,GAAcI,OAAd;AACD;AAJQ,GAPiB;AAa5BG,EAAAA,OAAO,EAAE;AACPC,IAAAA,QADO,oBACEC,OADF,EACU;AACf,UAAMC,UAAU,GAAGC,IAAI,CAACf,MAAM,CAACgB,MAAP,GAAgB,GAAhB,GAAsBhB,MAAM,CAACiB,SAA9B,CAAvB;AACAC,MAAAA,KAAK,CAAC,qCAAqClB,MAAM,CAACgB,MAA5C,GAAqD,QAAtD,EAAgE;AACnEG,QAAAA,MAAM,EAAE,KAD2D;AAEnEC,QAAAA,OAAO,EAAE;AACP,2BAAiB,YAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CADrB;AAEP,0BAAgB;AAFT;AAF0D,OAAhE,CAAL,CAMGC,IANH,CAMQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OANX,EAOCF,IAPD,CAOM,UAAAG,IAAI;AAAA,eAAIb,OAAO,CAACc,MAAR,CAAe,eAAf,EAAgCD,IAAhC,CAAJ;AAAA,OAPV;AAQD;AAXM,GAbmB;AA0B5BE,EAAAA,OAAO,EAAE;AACPC,IAAAA,aADO,yBACO1B,KADP,EACc;AACnB,aAAOA,KAAK,CAACE,KAAN,GAAa,CAApB;AACD,KAHM;AAIPyB,IAAAA,cAJO,0BAIQ3B,KAJR,EAIe;AACpB,aAAOC,KAAK,CAAC2B,MAAb;AACD;AANM;AA1BmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport config from '@/config/db'\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n\n  state: {\n    feeds: [],\n    count: 11\n  },\n\n  mutations: {\n    GET_ALL_FEEDS(state, payload) {\n      console.log(payload)\n      state.feeds = payload;\n    }\n  },\n  actions: {\n    getFeeds(context){\n      const authString = btoa(config.appKey + ':' + config.appSecret);\n      fetch('https://baas.kinvey.com/appdata/' + config.appKey + '/feeds', {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Kinvey '+ localStorage.getItem('authtoken'),\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json())\n      .then(data => context.commit('GET_ALL_FEEDS', data));\n    }\n  },\n  getters: {\n    doubleCounter(state) {\n      return state.count *2;\n    },\n    getFeedsLenght(state) {\n      return feeds.lenght;\n    }\n  }\n});"]}]}