{"remainingRequest":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/babel-loader/lib/index.js!/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dbasharanov/Desktop/ElevateCompany/rss-reader/src/components/auth/Signup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/src/components/auth/Signup.vue","mtime":1566334705657},{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required } from 'vuelidate/lib/validators';\nimport axios from 'axios';\nimport config from '@/config/db';\nimport { registerUser } from '@/services/authServices';\nexport default {\n  data: function data() {\n    return {\n      username: '',\n      email: '',\n      password: ''\n    };\n  },\n  validations: {\n    username: {\n      required: required\n    },\n    email: {\n      required: required\n    },\n    password: {\n      required: required\n    }\n  },\n  mixins: [registerUser],\n  methods: {\n    onFormSubmit: function onFormSubmit() {\n      var _this = this;\n\n      this.registration(this.username, this.password, this.email).then(function (res) {\n        return _this.$router.push('/');\n      });\n    }\n  }\n};",{"version":3,"sources":["Signup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBA,SAAA,QAAA,QAAA,0BAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,MAAA,MAAA,aAAA;AACA,SAAA,YAAA,QAAA,yBAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA;AAHA,KAAA;AAKA,GAPA;AAQA,EAAA,WAAA,EAAA;AACA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KADA;AAEA,IAAA,KAAA,EAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KAFA;AAGA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA;AAAA;AAHA,GARA;AAaA,EAAA,MAAA,EAAA,CAAA,YAAA,CAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AACA,WAAA,YAAA,CAAA,KAAA,QAAA,EAAA,KAAA,QAAA,EAAA,KAAA,KAAA,EACA,IADA,CACA,UAAA,GAAA;AAAA,eAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AAAA,OADA;AAEA;AAJA;AAdA,CAAA","sourcesContent":["<template>\n  <div class=\"register\">\n    <h1>Register</h1>\n    <form @submit.prevent=\"onFormSubmit\">\n      <label for=\"username\">Username</label>\n      <input type=\"text\" v-model=\"username\" id=\"username\" placeholder=\"Ivan Ivanov\">\n      <label for=\"email\">Email</label>\n      <input type=\"text\" v-model=\"email\" id=\"email\" placeholder=\"ivan@gmail.com\">\n      <label for=\"password\">Password</label>\n      <input type=\"password\" v-model=\"password\" id=\"password\" placeholder=\"******\">\n\n      <input type=\"submit\" value=\"Register\" :disabled=\"$v.$error\">\n    </form>\n  </div>\n</template>   \n\n\n<script>\n  import { required } from 'vuelidate/lib/validators';\n  import axios from 'axios';\n  import config from '@/config/db';\n  import { registerUser } from '@/services/authServices'\n  \n  export default {\n    data() {\n      return {\n        username: '',\n        email: '',\n        password: ''\n      }\n    },\n    validations: {\n      username: {required},\n      email: {required},\n      password: {required}\n    },\n    mixins: [registerUser],\n    methods: {\n      onFormSubmit(){\n        this.registration(this.username, this.password, this.email)\n            .then(res => this.$router.push('/'));\n      }\n    }\n  }\n</script>"],"sourceRoot":"src/components/auth"}]}