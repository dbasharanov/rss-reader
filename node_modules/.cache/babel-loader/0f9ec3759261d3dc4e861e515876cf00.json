{"remainingRequest":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/babel-loader/lib/index.js!/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/eslint-loader/index.js??ref--13-0!/home/dbasharanov/Desktop/ElevateCompany/rss-reader/src/services/authService.js","dependencies":[{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/src/services/authService.js","mtime":1566334546203},{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dbasharanov/Desktop/ElevateCompany/rss-reader/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import config from '@/config/db';\n\nvar currentUser = function currentUser(user) {\n  localStorage.setItem('username', user.username);\n  localStorage.setItem('authoken', user.authtoken);\n};\n\nexport var authService = {\n  computed: {\n    isAuthenticated: function isAuthenticated() {\n      return localStorage.getItem('authtoken') !== null;\n    }\n  }\n};\nexport var registerUser = {\n  methods: {\n    registration: function registration(username, password, email) {\n      var authString = btoa(config.appKey + ':' + config.appSecret);\n      this.$http.defaults.headers.post['Authorization'] = 'Basic ' + authString;\n      return this.$http.post('https://baas.kinvey.com/user/' + config.appKey, {\n        username: username,\n        password: password,\n        email: email\n      }).then(function (_ref) {\n        var data = _ref.data;\n        return currentUser({\n          username: data.username,\n          authoken: data._kmd.authtoken\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["/home/dbasharanov/Desktop/ElevateCompany/rss-reader/src/services/authService.js"],"names":["config","currentUser","user","localStorage","setItem","username","authtoken","authService","computed","isAuthenticated","getItem","registerUser","methods","registration","password","email","authString","btoa","appKey","appSecret","$http","defaults","headers","post","then","data","authoken","_kmd"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI,EAAI;AAC1BC,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,IAAI,CAACG,QAAtC;AACAF,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,IAAI,CAACI,SAAtC;AACD,CAHD;;AAIA,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eADQ,6BACU;AAChB,aAAON,YAAY,CAACO,OAAb,CAAqB,WAArB,MAAsC,IAA7C;AACD;AAHO;AADe,CAApB;AAOP,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YADO,wBACMR,QADN,EACgBS,QADhB,EACyBC,KADzB,EAC+B;AACpC,UAAMC,UAAU,GAAGC,IAAI,CAACjB,MAAM,CAACkB,MAAP,GAAgB,GAAhB,GAAsBlB,MAAM,CAACmB,SAA9B,CAAvB;AAEA,WAAKC,KAAL,CAAWC,QAAX,CAAoBC,OAApB,CAA4BC,IAA5B,CAAiC,eAAjC,IAAoD,WAAUP,UAA9D;AACA,aAAO,KAAKI,KAAL,CAAWG,IAAX,CAAiB,kCAAkCvB,MAAM,CAACkB,MAA1D,EAAkE;AACrEb,QAAAA,QAAQ,EAAEA,QAD2D;AAErES,QAAAA,QAAQ,EAAEA,QAF2D;AAGrEC,QAAAA,KAAK,EAAEA;AAH8D,OAAlE,EAIJS,IAJI,CAIC;AAAA,YAAEC,IAAF,QAAEA,IAAF;AAAA,eAAYxB,WAAW,CAAC;AAC5BI,UAAAA,QAAQ,EAAEoB,IAAI,CAACpB,QADa;AAE5BqB,UAAAA,QAAQ,EAAED,IAAI,CAACE,IAAL,CAAUrB;AAFQ,SAAD,CAAvB;AAAA,OAJD,CAAP;AAQD;AAbM;AADiB,CAArB","sourcesContent":["import config from '@/config/db'\n\nconst currentUser = user => {\n  localStorage.setItem('username', user.username)\n  localStorage.setItem('authoken', user.authtoken)\n};\nexport const authService = {\n  computed: {\n    isAuthenticated() {\n      return localStorage.getItem('authtoken') !== null;\n    }\n  }\n}\nexport const registerUser = { \n  methods: {\n    registration(username, password,email){\n      const authString = btoa(config.appKey + ':' + config.appSecret);\n\n      this.$http.defaults.headers.post['Authorization'] = 'Basic '+ authString;\n      return this.$http.post( 'https://baas.kinvey.com/user/' + config.appKey, {\n          username: username,\n          password: password,\n          email: email\n      }).then(({data}) => currentUser({\n          username: data.username,\n          authoken: data._kmd.authtoken\n      }));\n    }\n  }\n}"]}]}